name: Publish Docker image of axmouth.dev Backend to GHCR then update the image version on server

on: [push]

jobs:
  push_to_registry_and_deploy_to_server:
    if: github.ref == 'refs/heads/master'
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to Github Container Registry with Docker
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: Pull the previous version of the Docker image from Github Container Registry
        run: docker pull ghcr.io/axmouth/zhinindas-alchemy-shop-api || true
      - name: Build the new version of the image
        run: docker build . --file "Zhininda's Alchemy Shop/Dockerfile" --tag ghcr.io/axmouth/zhinindas-alchemy-shop-api --cache-from=ghcr.io/axmouth/zhinindas-alchemy-shop-api
      - name: Tag image
        run: docker tag ghcr.io/axmouth/zhinindas-alchemy-shop-api latest
      - name: Push image to GHCR
        run: docker push ghcr.io/axmouth/zhinindas-alchemy-shop-api || true

      - name: Pull the previous version of Docker image for the build stage from Github Container Registry
        run: docker pull ghcr.io/axmouth/zhinindas-alchemy-shop-user-client-builder || true
      - name: Pull the previous version of the final Docker image from Github Container Registry
        run: docker pull ghcr.io/axmouth/zhinindas-alchemy-shop-user-client || true
      - name: Build the new version of the builder image
        run: docker build . --file Dockerfile.user.client.builder --tag ghcr.io/axmouth/zhinindas-alchemy-shop-user-client-builder --cache-from=ghcr.io/axmouth/zhinindas-alchemy-shop-user-client-builder
      - name: Build the new version of the final image
        run: docker build . --file Dockerfile.user.client.final --tag ghcr.io/axmouth/zhinindas-alchemy-shop-user-client --cache-from=ghcr.io/axmouth/zhinindas-alchemy-shop-user-client
      - name: Tag builder image
        run: docker tag ghcr.io/axmouth/zhinindas-alchemy-shop-user-client-builder latest
      - name: Tag final image
        run: docker tag ghcr.io/axmouth/zhinindas-alchemy-shop-user-client latest
      - name: Push builder image to GHCR
        run: docker push ghcr.io/axmouth/zhinindas-alchemy-shop-user-client-builder || true
      - name: Push final image to GHCR
        run: docker push ghcr.io/axmouth/zhinindas-alchemy-shop-user-client || true
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Create empty .env file
        run: touch .env
      - name: Use docker-compose to remotely stop containers
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: DOCKER_HOST="ssh://$SERVER_USERNAME@$SERVER_IP:$SSH_PORT" docker-compose stop
      - name: Use docker-compose to remotely remove containers
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: DOCKER_HOST="ssh://$SERVER_USERNAME@$SERVER_IP:$SSH_PORT" docker-compose rm -f
      - name: Use docker-compose to remotely pull new containers
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: DOCKER_HOST="ssh://$SERVER_USERNAME@$SERVER_IP:$SSH_PORT" docker-compose pull
      - name: Use docker-compose to deploy remotely
        env:
          CAPTCHA_SECRET: ${{ secrets.CAPTCHA_SECRET }}
          CAPTCHA_VERIFY_URL: https://hcaptcha.com/siteverify
          CONTACT_ADDRESS: ${{ secrets.CONTACT_ADDRESS }}
          CONTAINER_NAME: zhinindas-alchemy-shop-postfix
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JwtSettings__Secret: ${{ secrets.JWT_SECRET }}
          JwtSettings__TokenLifetime: 0:0:500
          EmailSettings__FromAddress: noreply@zhininda.axmouth.dev
          EmailSettings__FromName: Zhininda
          EmailSettings__UserName: ${{ secrets.MAIL_USERNAME }}
          EmailSettings__Password: ${{ secrets.MAIL_PASSWORD }}
          EmailSettings__Host: ${{ secrets.MAIL_HOST }}
          EmailSettings__Port: ${{ secrets.MAIL_PORT }}
          Logging__LogLevel__Default: Error
          WEBSITE_URL: axmouth.dev
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SwaggerOptions__JsonRoute: swagger/{documentName}/swagger.json
          SwaggerOptions__Description: Our API
          SwaggerOptions__UIEndpoint: v1/swagger.json
        run: DOCKER_HOST="ssh://$SERVER_USERNAME@$SERVER_IP:$SSH_PORT" docker-compose up --remove-orphans -d
